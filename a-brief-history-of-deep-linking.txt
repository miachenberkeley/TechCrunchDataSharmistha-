
Chris Maddern is a co-founder of Button.Deep linking has become one of the hottest topics in mobile over the past year as dozens of startups have launched around using, improving and discovering deep links. All of the big platform companies also have projects to own the deep linking standard or the search index for mobile. So,what are deep links and where did they come from?In the most simple interpretation, a deep link is any link thatdirects a user past the home page of a website or app to content inside of it. e.g. linking directly to a product instead of the home page.In the context of 2015, were particularly interested in mobile deep links; links that can be used to open an app to a specific piece of content or action. For examplethe URL fb:// may open the Facebook app, but fb://profile/33138223345 opens Wikipedias profile in the Facebook app.The concept of deep linking has been around for a long time; first appearing commonly in media around 2006 to describe the growing practice of providing Google (and other search engines) with visibility into pages beyond the home page.At the time, the term was also commonly misused to refer to hot linking, the practice of linking directly to files for download that were hosted by a third, non-participating party. That earned deep linking a public association with the exploding controversy around the online consumption of copyrighted material.A number of courts in the U.S. issued judgements (and injunctions) on the idea that linking directly to content within a website could be a breach of that partys copyright, especially when such a deep-linking party was monetizing the content with ads served alongside the content (such as a search listing preview). In 2006, threats against deep linking posed as real a threat to the open and functional Internet as those of net neutrality have in 2014.In 2008, Apple released iPhone OS 2 (now iOS) and brought with it the iOS SDK. For the first time, developers could build applications for the iPhone and submit them to the new App Store. Apps, unlike web pages, were not based on the same document structure of the web. While, technically, even iOS 2 could handle deep linking, mapping to content and actions inside of the average app was incredibly hard.App structures, and hooks to key actions or features, were opaque. It also wasnt an acknowledged problem for developers; the ecosystem was nascent, apps were basic (at best), mobile commerce was non-existent and the perceived usefulness of deep linking was minimal.The problem that deep linking solved in the early years of iOS was mostly mapping web page items to the same item in an app: If Im reading an article in Pulse/NYT on the web, how do I open that same article in the app? This meant that the first apps for which deep linking was truly useful were companies with large amounts of content. If an app has three items available, the burden for a user to choose between them is low, but if there are 20,000 options, the efficiency and UX benefit of deep linking a user directly is huge.In 2012, Google+ introduced one of the first mainstream usesof deep linking outside of web-> app mapping when they announced deeplinks to content in the Google+ app. This was one of the first examples of a true app-to-app,deep-linking experience, hinting at the benefits of seamless app-based connections.By 2013-2014, mobile commerce had begun to explode; people were buying real things on their mobile devices to the tune of billions and with it came a need for better tools to drive users through the conversion funnel. The millions that brands had invested in developing mobile apps were finally paying off. Apps were converting users to purchase far better than the mobile web (often many times over), but they had no good way to get users into their apps from traditional marketing and acquisition channels: email and web ads.Services started popping up to take users from marketing emails and redirect them into apps using deep links. In some cases, they would also prompt users who didnt have the app to download it from the App Store or Play Store. While that proved to be a challenging business to many service providers, it helped brands to direct their users more intelligently, providing higher conversion and better user experience.It also brought to light a serious problem: how to address a specific item, piece of content or action, when there is no standard for how deep links are structured or discovered.In order for me to write this article, and for you to be able to read it, we have to share a common language: modern English. The same holds true for directing users through deep links  in order to construct a deep link that an application will understand, we need to have some shared way of expressing information or addresses. In software engineering, a well-defined shared vernacular is defined by a standard.The problem with standards, though, is that many of them do not actually become standard practice, and introduce as much fragmentation as they resolve. I could define the word basilafacitarian as a person who likes basil a lot, but unless it enters the common vernacular, its useless as a means of communication for me to tell you that I like basil.The same is true for an app speaking to another app; unless the URL myapp://show-item/id123 is mutually agreed upon, theres no guarantee what the receiving app will do with it.The industry is still waiting for a standard way to interpret, build and discover deep links  a problem that a number of companies are focused on, and a problem that I expect to see solved in the coming years.Deep links are simply a way to identify, address and transport users to specific content in apps. While convenient (and necessary), theyre not that revolutionary or exciting. The future value of deep links lies in how we use them  whats built on top of them, and the new consumer experiences theyll enable.This will include novel ways to discover deep links for apps that you have, discovering new apps through deep-linkable relevant content and services, and the transfer of more intelligence across the links themselves. Much like a hyperlink, its not the mechanism that will change the world, but the way we use them to connect the web together.