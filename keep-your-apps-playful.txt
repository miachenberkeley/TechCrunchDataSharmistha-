
Jonathan Saragossi is the founder of free website builders XPRS and IM Creator, as well as a co-founder of WIX.com.Computer software and apps are our modern-day toys. Whether its a hot dating app or a system for planning molecules (a true story), interface designers must treat the process of creating a new app as if they were creating a new toy. Im calling it playification, and I believe its a must-have tool for anyone in our industry.Lets face it, the users of our products, due to their overflow of stimulation and reduced ability to concentrate, are like kids in a toy store. They have infantile attention spans; our job is to catch their attention and place them in a clear process that is both enjoyable and productive. After all, we are the new toy makers.Game-like product design is nothing new; a few years ago, the term gamification gained huge momentum. The main idea was to create mechanisms of point-based games with the goal of keeping users in the product and generating high engagement rates.Every product team I worked with added a gamification layer of scoring and prizes to the product. It worked to some degree, but eventually wasnt a game changer. Most of the products trying to implement this principle did so as a layer on top of existing products, making it too artificial, and subsequently failed.Learning from this experience, I want to present a different approach:playification planning the product as a playful toy from the start. This approach relates to the very core of the product. Not a layer that will gamify, but rather a new mold that will make your product an actual toy. I have implemented these principles in the past, as I continue to do today, and, time after time,they do not disappoint.Image: m01229/Flickr under a cc by-sa 2.0 licenseThese are the principles guiding me when I design a new toy-like product:A good toy allows you to understand how to play with it at a single glance. It is obvious how to operate the first layer from the get go, and you dont need to read the instructions. The packaging (or in our case, the homepage, or instructions given upon installation) also has a role.Remember the talking parrots and the big arrow pointing to one button? TRY ME! That is the exact idea. Does your product have one basic function that immediately clarifies its value? Is this option exposed in a way that users will press it the first time they encounter the product?The goal is to recreate the strong initial sensation any good toy summons: You immediately want to grab it and try it out. It has to be attractive, especially the parts you see immediately. The importance of the screenshots on the App Store and the start screen are often overlooked; as in most apps and programs, the first screens are a sign-up screen and Terms of Use. That is not the way to design a toy. Keep the sign-up process for after the user has experienced the product.Have we succeeded in building something desirable, something that makes users push the button? Now we need to amaze them, right at that first push. Put the most amazing thing your product can do or create at the first click.It sounds obvious, but you would be surprised to find out how many products place their main capabilities at a distance of many clicks. The farther away the good stuff is, the fewer users who will experience it and stay on to play. The rule of thumb is that with every click, you lose about a quarter (!) of the users.Interaction in the product needs to be based on 3-4 simple rules. Lego, for example, is based on a similar rule system: Any one piece can connect to any other piece. There is a large variety of pieces. You can build by blueprint or build new things freestyle. Does your product have such a rule system?Choose bold colors that stand out. Repeat the same scheme over and over. Use a simple constant grid that repeats itself.Image: XPRSGood toys are usually usable and fun at multiple levels of play. There is no steep learning curve, you can enjoy them at first touch and as you move forward the enjoyment and challenge expand. Many web products lack this characteristic; they require learning and a long involvement to reach the desired result.Just as toy companies offer new versions and expansions for toys (products like Mr. Potato Head, Hot Wheels, Barbie and Lego), we too need to expand the possibilities of our software on a regular basis, and once every few months.Expansion packs and new features will preserve interest in the product and create a discourse between users,forming a community of players. This community of players is comprised of the real users who have made your programs and apps part of their lives; they are the ones who will do the marketing for you and contribute to getting more users.When I implore you to design programs and apps as toys, I do not mean you should make products that are childish, imbecilic or effect-laden with kindergarten bells and whistles. Toy-like products are actually intelligent, minimalistic and clear, free of unnecessary embellishments.A good toy doesnt break, even if you handle it aggressively or if you dont follow the instructions. For some reason, programs have the tendency to malfunction very easily, which is our problem as the programmers. At every step consider what happens if the user clicks something that is not intended to be clicked. Does the product continue working, or do terrible things happen that the user will never know how to overcome?Image: moreimages/ShutterstockIts generally a good idea to hide or remove options that are irrelevant to the current stage the user is in  it prevents confusion and puts users into a clear and simple process.Working on a new product? Continuing to improve an existing one? Try holding it up against these principles. Think of yourself as a toy maker. When we measure our work by standards taken from another world, in this case the world of industrial design of toys, its easier to spot the problems we have overlooked due to the prolonged task of dealing with the smaller details.Take a few days in which you wont deal with the product, without any planning or working on it at all. After a few days return to it;the problems will be crystal clear, and many times the solutions will be clear, as well.