Last summer, Mozilla launched a very experimental version of Firefox with support forweb-based virtual reality apps that could be experienced through the Oculus Rift. Earlier this week, support forWebVR also landed in Firefoxs Nightly and Developer Edition release channels.So why is Mozilla working on virtual reality when its mission is to promote openness, innovation and opportunity on the Web? At a talk last summer, Mozillas Josh Carpenterargued that the organization knows VR will be a really big deal and because it presents a really great challenge  and we like great challenges. To give users that feeling of actually being present in a different world (and not just that of looking at a simulation), you need to get the latency between head movements and the screen reacting to them down to an absolute minimum. Mozilla argues that, in the end, all of this work will not just benefit the VR experience, but also the Web experience as a whole.To do this, Mozilla has thrown its weight behind WebVR, an experimental API that makes it easier to connect the browser to virtual reality headsets. Google, too, has started to experiment with this as well, so theres already some cross-browser support for it, even thoughits still far from being an official standard and from becoming a default feature of Mozillas and Googles mainstream browser release channels.For now, the new Firefox builds only work with the Oculus Rift (though you still have to install a small plugin to make this work), but Mozilla says it also plans to add built-in support for Linux, Firefox for Android and Googles Cardboard.With projects like asm.js and others, Mozilla has worked hard to bring native-like speeds to browser- and JavaScript-based applications. Im not completely sold on the idea that the browser is the best place for experiencing virtual reality, but there is something to be said for Mozillasapproach of creating an open ecosystem that could side-step the walled gardens of the different VR vendors in the long run.For now, achieving that feeling of presence greatly depends on getting the lag down and even if Mozilla manages to get JavaScript performance even closer to native speeds, native VR apps will always be just a little bit better. Still, ifthis project yields nothing more than better browser performance and acceptable (but not stellar) browser-based VR experiences, Im all for it.