
Zack Rosen is the CEO of Pantheon.Ive seenthe same basic marketing mistake play out at some of the best software companies in the world: If your marketing team needs help from engineering to update their website (publish new posts, edit copy, upload images, etc.), then they have been set up to fail. This mistake is most often made when executives of companies (often engineers themselves) are unfamiliar with the day-to-day job of the marketers,website designers and developers they employ. I know of software companies with hundreds of millions, even billions of dollars of revenue on the line where marketers are simply unable to do their jobs and have to wait on engineering for days/weeks/months to makeupdates to their websites. Launching new online campaigns can mean waiting for the engineering team of the company to de-prioritize working on product features to create time for marketings needs. It can become a large-scale organizational dysfunction.This is insane (making the same predictable mistake over and over again) and it should stop. Its 2016  we should not still be having this debate.In this post I want to dive deep on how this problem gets created, why it can be ignored for so long and what marketers (and enlightened startup executives) can do to fix it.There is a reasonone of the first marketing investments your company made was building your website. When companies first get going they will often put up a website before they print business cards. Your website is literally the face of your company it is instantly accessible by anyone in the world via the Internet, putting themat the strategic center of any digital marketing effort. For this reason, more dollars are spent on websites ($190 billion) than all of digital advertising ($154 billion). The websiteat early startups often is seen (and built) literally as an extension of the product  with flat HTML/CSS and deployed on the same code-path as the companys core product. This makes sense when the same team that designed and built the product has all the marketing responsibilities themselves. But some day you need to grow up, hire marketers and build a proper website. I know of multiple startups with >$50 million revenue where website updates require a new deploy of their core product. This means every time marketing wants to update their website copy, they have to convince engineering to make a new deploy.A good marketer obsesses over messaging, writing, branding, SEO, SEM, analytics, etc. Some of them can code, some of them are analytics engineers  but they are not software engineers (they are marketers!). Requiring marketers to learn how to submit a GitHub Pull Request and go through your engineering approval pipeline to do their job is taking dogfooding a few steps too far. You are now needlessly bottlenecking their work and making it needlessly challenging for them to do their jobs. If you delay too long and take this to the extreme, you end up with a marketing team of dozens of employees where they cant update and control the content themselves. How would you like to work on an engineering team where in order to deploy code you had to wait in line in the copy editing queueto get marketing to approve the grammar and sentence construction of your codes comments? Let engineers code, and let marketers publish their content! Marketers who cant control their content cant do their job. Simply put, content management software enables marketers to update the content of their websites themselves via a graphical interface. No coding, no pull requests, no code-review  no engineering intervention required. Content management works. Content management enables marketers to do their job.Content management software has been around for more than 20 years but, strangely for such a large ($190 billion) industry, it has only recently matured. Drupal and WordPress between them now command 65 percent share of the market (going to 80 percent quickly). WordPress and Drupal have won the market primarily because the industry of professional website designers and developers have, by and large, standardized their work on the software. Increasingly over the last few years, if you are professional website developer you wont get hired by marketers unless you use Drupal or WordPress. Most marketers by now know how to use these tools and are comfortable using them (just ask them!). There is an increasingly robust vendor ecosystem (in whichPantheon competes) that specializes in operating  hosting, scaling, tuning, developing  WordPress and Drupal sites. But it is a specialized industry with its own tools and vendors, connected but separate from the wider software engineering industry. Ive found many engineers at startups who are pulled into website projects butoften are not up to speed on the content management industry, which contributes to this disconnect.Does this sound familiar?Even if you are convinced that marketing needs content management, its not like you can just snap your fingers. Lets get into the real horse-trading that happens when it comes to managing your companys website. And lets make sure marketing is properly armedbecause its not always fair pitting a marketer against your world-class engineers weighing in on a technology decision.We cant run WordPress or Drupal because its insecure.This is a very lazy excuse. While its true that you need to manage Drupal and WordPress security updates, that is true of all software for whichengineers are responsible. It would be like a marketer saying We cant invest in PR because it may result in bad PR. Technically true, but wrong nonetheless.It may be true that the engineer may not want to take on the security burden themselves, which is fair, but there are a number of great options for outsourcing this responsibility. My follow-up question for your security-minded engineering: Do we really want to run our public, Internet-accessible website on the same infrastructure as our product and user data? Breaking out your website from your product can improve security via security in depth.Our website developers dont want to use WordPress or Drupal.This often happens if you are borrowing engineers from your product team to develop your website. Engineers who build products for a living are more familiar with tools for software engineers  React, Ruby on Rails  as opposed to the tools professional website developers use, such as WordPress and Drupal. This can be especially tricky if these developers are shared between product and marketing; it is hard to ask engineers to flip back and forth between two very different kinds of environments.However, to be fair to marketing, you are making an implicit trade-off. You need to sit down and decide whats more important: for your front-end engineers to use the tools they prefer or for your marketing team to be able to manage their content. Thats a decision that requires thoughtful weighing of trade-offs.Long term, obviously, the real answer hereis to get marketing their own resources for developing the website. The sooner the better, because it will become increasingly hard for the product teams to carve out time to help marketing; they have their real jobs to do, of course.This flat-file website technology I use to update my personal website is way better than Drupal and WordPress, so we should use it instead. Ill teach you how to make a Pull Request, its easy!This is pure hubris. Marketers, not your engineering team,are experts in evaluating marketing software. What would happen if your marketer went up to your CTO and told them I went to this conference and saw a demo of this data-center management software from Oracle that is SUPER powerful. I am really concerned that we are missing the boat here.If an engineer ever tells your marketing executive they know how to evaluate marketing technology better, your marketer should smile politely and stay firm (and feel free to send them to this post).WordPress and Drupal are overkill, our engineers are going to build you a custom CMS that will work way better.This is beyond hubris. Its really stupid. Anyone planning to spend hundreds of thousands of dollars (let alone millions) building a custom CMS is on a fools errand. I am not understating the risk. In extreme cases (e.g. at digital publishers) I have seen this decision derail companies.What would you say if your CTO came to the conclusion that in order to build your product they needed to develop their own proprietary replacement for the Linux kernel?i saw the best writers of my generationdestroyed by attempts to build a proprietary CMS sarah jeong (@sarahjeong) January 11, 2016WordPress and Drupal are huge, established open-source projects with thousands of contributors and ecosystems of hundreds of thousands of professional developers, marketing users and vendors. In terms of successful open-source projects, they are right up there with the Linux kernel. They have leveraged hundreds of millions of dollars of open-source engineering effort. They are incredibly robust products.Your engineering team may be talented, but they are not going to build a replacement for WordPress or Drupal overnight. They are going to build you a complicated, buggy website money pit that your marketing department will be married to indefinitely. For a marketer this can be job-ender. If your engineering team came to this conclusion, you need to push them hard  your company cannot afford this mistake.We are too invested in our current website stack right now and there is no way we can prioritize rebuilding it right now.This is a tough one as its a high-level and high-stakes prioritization decision for your company.You first need to answer for your company, how important is our website? I would start this exercise by finding out what percent of your leads originate on your website. (For software companies this is often as high as 95 percent.)You will then need to weigh the cost (time and money) of rebuilding your website against the opportunity cost of having a high-functioning website. To be fair, you will need to weigh in the project risk of the transition itself as these projects can be complicated.Finally, you need to answer: If we dont rebuild our website now, then when will we?Slowly, but surely rational business decision making will win the day.